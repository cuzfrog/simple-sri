package sri.web.vdom.styled

import sri.core.{ReactElement, ReactNode}

import scala.language.experimental.macros

/** The code is generated by sbt task. */
trait StyledTags {
  @inline def solidcolor(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def big(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def tr(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def cite(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def html(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def footer(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def h4(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def caption(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def datalist(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def header(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def wbr(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def canvas(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def base(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def source(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def feFuncB(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def b(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def mesh(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def table(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def style(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def title(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def keygen(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def tfoot(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def view(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def area(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def details(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feDistantLight(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def hgroup(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def hr(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def q(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def meshpatch(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def legend(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feTurbulence(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def set(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def link(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def meshgradient(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def del(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def line(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def rt(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def map(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def fieldset(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def menu(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def polygon(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def ol(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def unknown(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def tbody(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feDiffuseLighting(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feImage(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def pre(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def filter(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def optgroup(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def mask(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def embed(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def u(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def image(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def select(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def s(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def use(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def input(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def thead(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feMergeNode(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def h6(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def abbr(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def meshrow(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def td(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def em(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feFlood(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def svg(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def colgroup(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def track(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def bdo(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def circle(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def time(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feBlend(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def ul(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def body(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def output(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feOffset(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def `var`(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def progress(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def h1(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def figcaption(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def stop(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def defs(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def iframe(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def small(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def textPath(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def picture(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def a(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def meta(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def article(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def blockquote(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def fePointLight(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feFuncA(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def bdi(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def li(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def cursor(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def h5(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def col(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def dialog(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def kbd(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def nav(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def aside(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def animateTransform(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def g(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def span(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def ellipse(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feSpotLight(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feFuncG(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def th(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def pattern(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def ins(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def p(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def `object`(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def hatchpath(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feMerge(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feColorMatrix(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def script(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feMorphology(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def summary(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feFuncR(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def br(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def sup(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def clipPath(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def dt(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def hatch(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def code(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def polyline(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def h2(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def menuitem(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def address(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feComponentTransfer(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feDropShadow(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def ruby(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feSpecularLighting(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def path(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feTile(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def metadata(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feGaussianBlur(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def symbol(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def desc(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def dl(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def meter(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def figure(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def samp(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def rp(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def foreignObject(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def dfn(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feConvolveMatrix(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def option(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def head(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def video(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def main(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def i(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def sub(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def label(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def button(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feComposite(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def mpath(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def h3(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def animate(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def discard(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def section(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def linearGradient(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def text(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def div(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def audio(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def tspan(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def mark(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def animateMotion(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def form(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def textarea(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def param(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def marker(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def noscript(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def dd(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def radialGradient(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def rect(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def feDisplacementMap(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def switch(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def data(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl

  @inline def img(props: TypedProp[_]*): ReactElement = macro MacroImpl.domChooseNoChildrenImpl

  @inline def strong(props: TypedProp[_]*)(children: ReactNode*): ReactElement = macro MacroImpl.domChooseImpl
}
